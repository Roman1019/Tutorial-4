{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// const LS_KEY = 'feedback-form-state';\n\n// const form = document.querySelector('.feedback-form');\n// const textarea = form.elements.message;\n// const email = form.elements.email;\n\n// form.addEventListener('submit', onSubmit);\n// form.addEventListener('input', onTextarea);\n\n// function onTextarea(e) {\n//   const formInput = {};\n//   formInput.email = e.currentTarget.elements.email.value.trim();\n//   formInput.textarea = e.currentTarget.elements.message.value.trim();\n\n//   localStorage.setItem(LS_KEY, JSON.stringify(formInput));\n// }\n\n// function onSubmit(e) {\n//   e.preventDefault();\n//   const email = e.currentTarget.elements.email.value.trim();\n//   const message = e.currentTarget.elements.message.value.trim();\n//   if (email === '' || message === '') {\n//     alert('eror');\n//   } else {\n//     console.log(JSON.parse(localStorage.getItem(LS_KEY)));\n//     localStorage.removeItem(LS_KEY);\n//   }\n//   e.currentTarget.reset();\n// }\n\n// function savedText() {\n//   const savedMessage = JSON.parse(localStorage.getItem(LS_KEY));\n//   if (savedMessage) {\n//     textarea.value = savedMessage.textarea;\n//     email.value = savedMessage.email;\n//     console.log(savedMessage.textarea);\n//   }\n// }\n// savedText();\n\n// const NOTIFICATION_DELAY = 3000;\n// let timeoutId = null;\n// const notification = document.querySelector('.js-alert');\n\n// showNotification();\n\n// function onNotitfication() {\n//   hideNotitfication();\n//   clearInterval(timeoutId);\n// }\n\n// function showNotification() {\n//   notification.classList.add('is-visible');\n//   notification.addEventListener('click', onNotitfication);\n//   timeoutId = setTimeout(() => {\n//     hideNotitfication();\n//     console.log('Закрито');\n//   }, NOTIFICATION_DELAY);\n// }\n\n// function hideNotitfication() {\n//   notification.classList.remove('is-visible');\n//   notification.removeEventListener('click', onNotitfication);\n// }\n\n// class Timer {\n//   constructor({ onTick }) {\n//     this.onTick = onTick;\n//     this.isActive = false;\n//     this.intervalId = null;\n\n//     const time = this.getTimeComponents(0);\n//     this.onTick(time);\n//   }\n\n//   start() {\n//     if (this.isActive === true) {\n//       return;\n//     }\n//     const time = this.getTimeComponents(0);\n//     this.onTick(time);\n//     this.isActive = true;\n\n//     const startTime = Date.now();\n\n//     this.intervalId = setInterval(() => {\n//       const currentTime = Date.now();\n//       const diff = currentTime - startTime;\n//       const time = this.getTimeComponents(diff);\n//       this.onTick(time);\n//     }, 1000);\n//   }\n\n//   stop() {\n//     if (this.isActive === false) {\n//       return;\n//     }\n//     clearInterval(this.intervalId);\n//     this.isActive = false;\n//   }\n\n//   getTimeComponents(time) {\n//     const hours = this.pad(\n//       Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n//     );\n//     const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//     const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n//     return { hours, mins, secs };\n//   }\n\n//   pad(value) {\n//     return String(value).padStart(2, '0');\n//   }\n// }\n\n// const startBtn = document.querySelector('button[data-action-start]');\n// const stopBtn = document.querySelector('button[data-action-stop]');\n// const clockface = document.querySelector('.js-clockface');\n\n// const timer = new Timer({\n//   onTick: updateClockface,\n// });\n\n// startBtn.addEventListener('click', timer.start.bind(timer));\n// stopBtn.addEventListener('click', timer.stop.bind(timer));\n\n// function updateClockface({ hours, mins, secs }) {\n//   clockface.textContent = `${hours}:${mins}:${secs}`;\n// }\n\n// const promise = new Promise((resolve, reject) => {\n//   const isPromise = Math.random() > 0.5;\n\n//   setTimeout(() => {\n//     if (isPromise) {\n//       resolve('Успішно');\n//     } else {\n//       reject('Неуспішно');\n//     }\n//   }, 1000);\n// });\n\n// console.log(promise);\n\n// promise\n//   .then(value => {\n//     console.log(`✅${value}`);\n//   })\n//   .then(value => {\n//     console.log(`1${value}`);\n//   })\n//   .then(value => {\n//     console.log(`2${value}`);\n//   })\n//   .catch(value => {\n//     console.log(`❌ ${value}`);\n//   })\n//   .finally(() => {\n//     console.log('Проміс завершився');\n//   });\n\n// const makeOrder = dish => {\n//   return new Promise((resolve, reject) => {\n//     const passed = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//       if (passed) {\n//         resolve(`✅ Ваше замовлення: ${dish}`);\n//       }\n\n//       reject('❌ Упс, у нас закінчилися продукти');\n//     }, 1000);\n//   });\n// };\n\n// makeOrder('пиріжок')\n//   .then(result => {\n//     console.log('onMakeOrderSuccess');\n//     console.log(result);\n//   })\n//   .catch(error => {\n//     console.log('onMakeOrderError');\n//     console.log(error);\n//   });\n\nconst startBtn = document.querySelector('.start-btn');\nconst container = document.querySelector('.container');\nconst result = document.querySelector('.result');\n\nstartBtn.addEventListener('click', handleStartGame);\n\nfunction handleStartGame({ target }) {\n  target.disabled = true;\n  const promises = [...container.children].map(() => {\n    return new Promise((resolve, reject) => {\n      const isPromiceFullfilled = Math.random() > 0.5;\n\n      if (isPromiceFullfilled) {\n        resolve('😝');\n      } else {\n        reject('😈');\n      }\n    });\n  });\n\n  Promise.allSettled(promises).then(items => {\n    const isWinner =\n      items.every(({ status }) => status === 'fulfilled') ||\n      items.every(({ status }) => status === 'rejected');\n\n    items.forEach((item, i) => {\n      container.children[i].textContent = '';\n      result.textContent = '';\n\n      setTimeout(() => {\n        container.children[i].textContent = item.value || item.reason;\n      }, 1000 * (i + 1));\n    });\n    setTimeout(() => {\n      target.disabled = false;\n      result.textContent = isWinner ? 'Winner' : 'Loser';\n    }, container.children.length * 1000);\n  });\n}\n"],"names":["startBtn","container","result","handleStartGame","target","promises","resolve","reject","items","isWinner","status","item","i"],"mappings":"wFA0LA,MAAMA,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAY,SAAS,cAAc,YAAY,EAC/CC,EAAS,SAAS,cAAc,SAAS,EAE/CF,EAAS,iBAAiB,QAASG,CAAe,EAElD,SAASA,EAAgB,CAAE,OAAAC,GAAU,CACnCA,EAAO,SAAW,GAClB,MAAMC,EAAW,CAAC,GAAGJ,EAAU,QAAQ,EAAE,IAAI,IACpC,IAAI,QAAQ,CAACK,EAASC,IAAW,CACV,KAAK,OAAM,EAAK,GAG1CD,EAAQ,IAAI,EAEZC,EAAO,IAAI,CAEnB,CAAK,CACF,EAED,QAAQ,WAAWF,CAAQ,EAAE,KAAKG,GAAS,CACzC,MAAMC,EACJD,EAAM,MAAM,CAAC,CAAE,OAAAE,CAAM,IAAOA,IAAW,WAAW,GAClDF,EAAM,MAAM,CAAC,CAAE,OAAAE,CAAM,IAAOA,IAAW,UAAU,EAEnDF,EAAM,QAAQ,CAACG,EAAMC,IAAM,CACzBX,EAAU,SAASW,CAAC,EAAE,YAAc,GACpCV,EAAO,YAAc,GAErB,WAAW,IAAM,CACfD,EAAU,SAASW,CAAC,EAAE,YAAcD,EAAK,OAASA,EAAK,MACxD,EAAE,KAAQC,EAAI,EAAE,CACvB,CAAK,EACD,WAAW,IAAM,CACfR,EAAO,SAAW,GAClBF,EAAO,YAAcO,EAAW,SAAW,OAC5C,EAAER,EAAU,SAAS,OAAS,GAAI,CACvC,CAAG,CACH"}